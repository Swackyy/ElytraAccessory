plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id "org.sonarqube" version "5.0.0.4638"
}

version = '1.0.0'
group = 'com.swacky.elytraaccessory'

base {
    archivesName = 'elytraaccessory'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '1.21-2024.06.23-1.21.1'
    reobf = false
    copyIdeResources = true
    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }


        client {
            property 'forge.enabledGameTestNamespaces', 'elytraaccessory'
        }

        server {
            property 'forge.enabledGameTestNamespaces', 'elytraaccessory'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', 'elytraaccessory'
        }

        data {
            workingDirectory project.file('run')
            args '--mod', 'elytraaccessory', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

repositories {
    mavenCentral()
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.21.1-52.0.3'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
    compileOnly 'curse.maven:ohmega-889368:5634445'
    localRuntime 'curse.maven:ohmega-889368:5634445'
}

mixin {
    config "elytraaccessory.mixins.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "elytraaccessory",
                "Specification-Vendor"    : "elytraaccessoryswacky",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "elytraaccessoryswacky",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "elytraaccessory.mixins.json"
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
